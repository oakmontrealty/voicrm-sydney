import { useState, useEffect } from 'react'\nimport { Home, MapPin, DollarSign, Calendar, Users, Eye, Camera, FileText } from 'lucide-react'\n\nexport default function PropertyPanel({ property, contact, onPropertySelect, supabase }) {\n  const [relatedProperties, setRelatedProperties] = useState([])\n  const [marketData, setMarketData] = useState(null)\n  const [upcomingInspections, setUpcomingInspections] = useState([])\n  const [propertyImages, setPropertyImages] = useState([])\n  const [loading, setLoading] = useState(false)\n  \n  useEffect(() => {\n    if (contact) {\n      loadRelatedProperties()\n    }\n    if (property) {\n      loadMarketData()\n      loadUpcomingInspections()\n    }\n  }, [contact, property])\n  \n  const loadRelatedProperties = async () => {\n    if (!contact?.id) return\n    \n    try {\n      const { data: interests } = await supabase\n        .from('property_interests')\n        .select(`\n          *,\n          properties (\n            id,\n            address,\n            suburb,\n            state,\n            postcode,\n            price,\n            property_type,\n            bedrooms,\n            bathrooms,\n            status,\n            date_listed\n          )\n        `)\n        .eq('contact_id', contact.id)\n        .order('created_at', { ascending: false })\n      \n      if (interests) {\n        setRelatedProperties(interests.map(i => i.properties))\n      }\n    } catch (error) {\n      console.error('Failed to load related properties:', error)\n    }\n  }\n  \n  const loadMarketData = async () => {\n    if (!property) return\n    \n    setLoading(true)\n    try {\n      // Simulate market data - would integrate with Domain/REA APIs\n      const mockMarketData = {\n        medianPrice: property.price * (0.95 + Math.random() * 0.1),\n        priceGrowth: (Math.random() * 20 - 5).toFixed(1),\n        daysOnMarket: Math.floor(Math.random() * 45) + 5,\n        similarSales: Math.floor(Math.random() * 8) + 2,\n        priceRange: {\n          low: property.price * 0.9,\n          high: property.price * 1.1\n        }\n      }\n      \n      setMarketData(mockMarketData)\n    } catch (error) {\n      console.error('Failed to load market data:', error)\n    } finally {\n      setLoading(false)\n    }\n  }\n  \n  const loadUpcomingInspections = async () => {\n    if (!property?.id) return\n    \n    try {\n      // Get upcoming inspections for this property\n      const { data: inspections } = await supabase\n        .from('property_inspections')\n        .select('*')\n        .eq('property_id', property.id)\n        .gte('scheduled_date', new Date().toISOString())\n        .order('scheduled_date', { ascending: true })\n        .limit(3)\n      \n      setUpcomingInspections(inspections || [])\n    } catch (error) {\n      console.error('Failed to load inspections:', error)\n    }\n  }\n  \n  const formatPrice = (price) => {\n    if (!price) return 'Price on application'\n    \n    if (price >= 1000000) {\n      return `$${(price / 1000000).toFixed(1)}M`\n    }\n    return `$${price.toLocaleString()}`\n  }\n  \n  const getPropertyTypeIcon = (type) => {\n    switch (type) {\n      case 'house': return '🏠'\n      case 'apartment': return '🏢'\n      case 'townhouse': return '🏘️'\n      case 'unit': return '🏬'\n      case 'land': return '🌾'\n      default: return '🏡'\n    }\n  }\n  \n  const getPriceChangeColor = (change) => {\n    if (change > 0) return 'text-green-600'\n    if (change < 0) return 'text-red-600'\n    return 'text-oakmont-grey'\n  }\n  \n  if (!property && relatedProperties.length === 0) {\n    return (\n      <div className=\"voicrm-card p-6\">\n        <div className=\"text-center py-8\">\n          <Home className=\"h-12 w-12 text-oakmont-grey/50 mx-auto mb-4\" />\n          <h3 className=\"text-lg font-medium text-oakmont-sage mb-2\">No Property Selected</h3>\n          <p className=\"text-oakmont-grey mb-4\">Select a property or contact to view property details</p>\n          \n          {/* Quick property search */}\n          <div className=\"max-w-md mx-auto\">\n            <input\n              type=\"text\"\n              placeholder=\"Search properties by address...\"\n              className=\"w-full p-3 border border-oakmont-sage/20 rounded-lg text-center\"\n            />\n            <button className=\"mt-2 voicrm-btn-secondary w-full\">\n              Search Properties\n            </button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n  \n  return (\n    <div className=\"space-y-6\">\n      {/* Main Property Display */}\n      {property && (\n        <div className=\"voicrm-card p-6\">\n          <div className=\"flex items-start justify-between mb-4\">\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"text-2xl\">{getPropertyTypeIcon(property.property_type)}</div>\n              <div>\n                <h3 className=\"text-xl font-bold text-oakmont-black\">{property.address}</h3>\n                <p className=\"text-oakmont-grey\">\n                  {property.suburb}, {property.state} {property.postcode}\n                </p>\n              </div>\n            </div>\n            \n            <div className=\"text-right\">\n              <div className=\"text-2xl font-bold text-oakmont-tan\">\n                {formatPrice(property.price)}\n              </div>\n              {marketData && (\n                <div className={`text-sm font-medium ${getPriceChangeColor(parseFloat(marketData.priceGrowth))}`}>\n                  {marketData.priceGrowth > 0 ? '+' : ''}{marketData.priceGrowth}% this year\n                </div>\n              )}\n            </div>\n          </div>\n          \n          {/* Property Details Grid */}\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mb-6\">\n            <div className=\"text-center p-3 bg-oakmont-cream rounded-lg\">\n              <div className=\"text-lg font-bold text-oakmont-sage\">{property.bedrooms || 'N/A'}</div>\n              <div className=\"text-xs text-oakmont-grey\">Bedrooms</div>\n            </div>\n            <div className=\"text-center p-3 bg-oakmont-cream rounded-lg\">\n              <div className=\"text-lg font-bold text-oakmont-sage\">{property.bathrooms || 'N/A'}</div>\n              <div className=\"text-xs text-oakmont-grey\">Bathrooms</div>\n            </div>\n            <div className=\"text-center p-3 bg-oakmont-cream rounded-lg\">\n              <div className=\"text-lg font-bold text-oakmont-sage\">{property.car_spaces || 'N/A'}</div>\n              <div className=\"text-xs text-oakmont-grey\">Car Spaces</div>\n            </div>\n            <div className=\"text-center p-3 bg-oakmont-cream rounded-lg\">\n              <div className=\"text-lg font-bold text-oakmont-sage\">\n                {property.land_size ? `${property.land_size}m²` : 'N/A'}\n              </div>\n              <div className=\"text-xs text-oakmont-grey\">Land Size</div>\n            </div>\n          </div>\n          \n          {/* Market Insights */}\n          {marketData && (\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\n              <div className=\"p-4 bg-oakmont-sage/5 rounded-lg border border-oakmont-sage/10\">\n                <div className=\"flex items-center space-x-2 mb-2\">\n                  <DollarSign className=\"h-4 w-4 text-oakmont-tan\" />\n                  <span className=\"text-sm font-medium text-oakmont-sage\">Median Price</span>\n                </div>\n                <div className=\"text-lg font-bold text-oakmont-black\">\n                  {formatPrice(marketData.medianPrice)}\n                </div>\n                <div className=\"text-xs text-oakmont-grey\">In {property.suburb}</div>\n              </div>\n              \n              <div className=\"p-4 bg-oakmont-sage/5 rounded-lg border border-oakmont-sage/10\">\n                <div className=\"flex items-center space-x-2 mb-2\">\n                  <Calendar className=\"h-4 w-4 text-oakmont-brown\" />\n                  <span className=\"text-sm font-medium text-oakmont-sage\">Days on Market</span>\n                </div>\n                <div className=\"text-lg font-bold text-oakmont-black\">\n                  {marketData.daysOnMarket}\n                </div>\n                <div className=\"text-xs text-oakmont-grey\">Average in area: 35 days</div>\n              </div>\n              \n              <div className=\"p-4 bg-oakmont-sage/5 rounded-lg border border-oakmont-sage/10\">\n                <div className=\"flex items-center space-x-2 mb-2\">\n                  <Users className=\"h-4 w-4 text-oakmont-sage\" />\n                  <span className=\"text-sm font-medium text-oakmont-sage\">Similar Sales</span>\n                </div>\n                <div className=\"text-lg font-bold text-oakmont-black\">\n                  {marketData.similarSales}\n                </div>\n                <div className=\"text-xs text-oakmont-grey\">Last 3 months</div>\n              </div>\n            </div>\n          )}\n          \n          {/* Upcoming Inspections */}\n          {upcomingInspections.length > 0 && (\n            <div className=\"mb-6\">\n              <h4 className=\"text-sm font-semibold text-oakmont-sage mb-3 flex items-center space-x-2\">\n                <Eye className=\"h-4 w-4\" />\n                <span>Upcoming Inspections</span>\n              </h4>\n              <div className=\"space-y-2\">\n                {upcomingInspections.map((inspection, index) => (\n                  <div key={index} className=\"flex items-center justify-between p-3 bg-oakmont-cream rounded-lg\">\n                    <div>\n                      <div className=\"font-medium text-oakmont-black\">\n                        {new Date(inspection.scheduled_date).toLocaleDateString('en-AU', {\n                          weekday: 'short',\n                          day: 'numeric',\n                          month: 'short',\n                          hour: 'numeric',\n                          minute: '2-digit'\n                        })}\n                      </div>\n                      <div className=\"text-sm text-oakmont-grey\">{inspection.inspection_type}</div>\n                    </div>\n                    <div className=\"text-sm text-oakmont-tan font-medium\">\n                      {inspection.attendee_count || 0} registered\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n          \n          {/* Property Description */}\n          {property.description && (\n            <div className=\"mb-6\">\n              <h4 className=\"text-sm font-semibold text-oakmont-sage mb-2\">Description</h4>\n              <div className=\"p-4 bg-oakmont-cream rounded-lg text-sm text-oakmont-black leading-relaxed\">\n                {property.description}\n              </div>\n            </div>\n          )}\n          \n          {/* Quick Actions for Property */}\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-3\">\n            <button className=\"voicrm-btn-secondary text-sm flex items-center justify-center space-x-2\">\n              <Eye className=\"h-4 w-4\" />\n              <span>Schedule Tour</span>\n            </button>\n            <button className=\"voicrm-btn-secondary text-sm flex items-center justify-center space-x-2\">\n              <Camera className=\"h-4 w-4\" />\n              <span>View Photos</span>\n            </button>\n            <button className=\"voicrm-btn-secondary text-sm flex items-center justify-center space-x-2\">\n              <FileText className=\"h-4 w-4\" />\n              <span>Send Details</span>\n            </button>\n            <button className=\"voicrm-btn-secondary text-sm flex items-center justify-center space-x-2\">\n              <DollarSign className=\"h-4 w-4\" />\n              <span>Market Report</span>\n            </button>\n          </div>\n        </div>\n      )}\n      \n      {/* Related Properties for Contact */}\n      {relatedProperties.length > 0 && (\n        <div className=\"voicrm-card p-6\">\n          <h4 className=\"text-lg font-semibold text-oakmont-sage mb-4 flex items-center space-x-2\">\n            <Home className=\"h-5 w-5\" />\n            <span>Client's Property Interests</span>\n          </h4>\n          \n          <div className=\"space-y-3\">\n            {relatedProperties.map((relatedProperty, index) => (\n              <div \n                key={index}\n                onClick={() => onPropertySelect?.(relatedProperty)}\n                className=\"p-4 bg-oakmont-cream hover:bg-oakmont-sage/10 rounded-lg cursor-pointer transition-colors border border-oakmont-sage/10\"\n              >\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex-1\">\n                    <div className=\"font-medium text-oakmont-black\">\n                      {relatedProperty.address}\n                    </div>\n                    <div className=\"text-sm text-oakmont-grey\">\n                      {relatedProperty.suburb}, {relatedProperty.state}\n                    </div>\n                    <div className=\"flex items-center space-x-4 mt-1 text-xs text-oakmont-grey\">\n                      <span>{relatedProperty.bedrooms}bd</span>\n                      <span>{relatedProperty.bathrooms}ba</span>\n                      <span className=\"capitalize\">{relatedProperty.property_type}</span>\n                    </div>\n                  </div>\n                  \n                  <div className=\"text-right\">\n                    <div className=\"font-semibold text-oakmont-tan\">\n                      {formatPrice(relatedProperty.price)}\n                    </div>\n                    <div className={`text-xs px-2 py-1 rounded-full ${\n                      relatedProperty.status === 'active' ? 'bg-green-100 text-green-800' :\n                      relatedProperty.status === 'pending' ? 'bg-yellow-100 text-yellow-800' :\n                      'bg-gray-100 text-gray-800'\n                    }`}>\n                      {relatedProperty.status}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n      \n      {/* Property Recommendations */}\n      {contact && !property && (\n        <div className=\"voicrm-card p-6\">\n          <h4 className=\"text-lg font-semibold text-oakmont-sage mb-4 flex items-center space-x-2\">\n            <MapPin className=\"h-5 w-5\" />\n            <span>Recommended Properties</span>\n          </h4>\n          \n          <div className=\"text-center py-8\">\n            <div className=\"text-oakmont-grey mb-4\">\n              AI-powered property matching based on:\n            </div>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm\">\n              <div className=\"p-3 bg-oakmont-sage/5 rounded-lg\">\n                <div className=\"font-medium text-oakmont-sage\">Budget Range</div>\n                <div className=\"text-oakmont-grey\">From call history</div>\n              </div>\n              <div className=\"p-3 bg-oakmont-sage/5 rounded-lg\">\n                <div className=\"font-medium text-oakmont-sage\">Location Preferences</div>\n                <div className=\"text-oakmont-grey\">Mentioned suburbs</div>\n              </div>\n              <div className=\"p-3 bg-oakmont-sage/5 rounded-lg\">\n                <div className=\"font-medium text-oakmont-sage\">Property Features</div>\n                <div className=\"text-oakmont-grey\">Discussed requirements</div>\n              </div>\n            </div>\n            \n            <button className=\"mt-4 voicrm-btn-primary\">\n              Generate Recommendations\n            </button>\n          </div>\n        </div>\n      )}\n      \n      {/* Market Insights Widget */}\n      {property && marketData && (\n        <div className=\"voicrm-card p-6\">\n          <h4 className=\"text-lg font-semibold text-oakmont-sage mb-4\">Market Insights</h4>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div>\n              <div className=\"text-sm text-oakmont-grey mb-1\">Price Range Analysis</div>\n              <div className=\"text-lg font-semibold text-oakmont-black\">\n                {formatPrice(marketData.priceRange.low)} - {formatPrice(marketData.priceRange.high)}\n              </div>\n              <div className=\"text-xs text-oakmont-grey\">Expected sale range</div>\n            </div>\n            \n            <div>\n              <div className=\"text-sm text-oakmont-grey mb-1\">Market Activity</div>\n              <div className=\"text-lg font-semibold text-oakmont-black\">\n                {marketData.similarSales} recent sales\n              </div>\n              <div className=\"text-xs text-oakmont-grey\">Similar properties nearby</div>\n            </div>\n          </div>\n          \n          <div className=\"mt-4 p-3 bg-oakmont-tan/5 rounded-lg border border-oakmont-tan/20\">\n            <div className=\"text-sm font-medium text-oakmont-tan mb-1\">AI Suggestion</div>\n            <div className=\"text-sm text-oakmont-black\">\n              {marketData.priceGrowth > 5 ? \n                \"Strong growth area - emphasize investment potential and price appreciation.\" :\n                marketData.priceGrowth > 0 ?\n                \"Stable market - focus on property features and lifestyle benefits.\" :\n                \"Buyer's market - highlight value and negotiation opportunities.\"\n              }\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}