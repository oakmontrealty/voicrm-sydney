import { useState, useEffect } from 'react'\nimport { Phone, User, Home, FileText, AlertTriangle, Clock, MapPin } from 'lucide-react'\nimport { WebRTCInterface } from './WebRTCClient'\nimport NumberCarousel from './NumberCarousel'\n\nexport default function StackedInterface({ contacts, properties, supabase, onContactUpdate }) {\n  const [selectedContact, setSelectedContact] = useState(null)\n  const [selectedProperty, setSelectedProperty] = useState(null)\n  const [activeCall, setActiveCall] = useState(null)\n  const [transcript, setTranscript] = useState([])\n  const [callQuality, setCallQuality] = useState(null)\n  const [teamCollisionWarning, setTeamCollisionWarning] = useState(null)\n  const [dialerNumber, setDialerNumber] = useState('')\n  const [callDisposition, setCallDisposition] = useState('')\n  \n  // Australian phone number formatting\n  const formatAustralianNumber = (number) => {\n    if (!number) return ''\n    \n    // Remove non-digits\n    const digits = number.replace(/\\D/g, '')\n    \n    // Handle different formats\n    if (digits.startsWith('61')) {\n      // International format: +61\n      const localPart = digits.slice(2)\n      if (localPart.startsWith('4')) {\n        // Mobile: +61 4XX XXX XXX\n        return `+61 ${localPart.slice(0, 3)} ${localPart.slice(3, 6)} ${localPart.slice(6)}`\n      } else {\n        // Landline: +61 X XXXX XXXX\n        return `+61 ${localPart.slice(0, 1)} ${localPart.slice(1, 5)} ${localPart.slice(5)}`\n      }\n    } else if (digits.startsWith('04')) {\n      // Mobile: 04XX XXX XXX\n      return `${digits.slice(0, 4)} ${digits.slice(4, 7)} ${digits.slice(7)}`\n    } else if (digits.startsWith('0')) {\n      // Landline: 0X XXXX XXXX\n      return `${digits.slice(0, 2)} ${digits.slice(2, 6)} ${digits.slice(6)}`\n    }\n    \n    return number\n  }\n  \n  const checkTeamCollision = async (contactId) => {\n    const response = await fetch('/api/contacts/collision', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ contactId })\n    })\n    \n    const { collision } = await response.json()\n    setTeamCollisionWarning(collision)\n  }\n  \n  const handleContactSelect = async (contact) => {\n    setSelectedContact(contact)\n    await checkTeamCollision(contact.id)\n    \n    // Load related properties\n    const { data: relatedProperties } = await supabase\n      .from('property_interests')\n      .select('properties(*)')\n      .eq('contact_id', contact.id)\n    \n    if (relatedProperties && relatedProperties.length > 0) {\n      setSelectedProperty(relatedProperties[0].properties)\n    }\n  }\n  \n  const handleCallStateChange = async (state, callData) => {\n    setActiveCall(callData)\n    \n    if (state === 'connected' && selectedContact) {\n      // Log call start\n      await supabase\n        .from('call_logs')\n        .insert({\n          contact_id: selectedContact.id,\n          call_sid: callData?.parameters?.CallSid,\n          direction: 'outbound',\n          status: 'in-progress',\n          started_at: new Date().toISOString()\n        })\n    }\n  }\n  \n  const handleQualityUpdate = (quality) => {\n    setCallQuality(quality)\n  }\n  \n  const dialpadDigits = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '*', '0', '#']\n  \n  return (\n    <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-6 h-screen max-h-screen\">\n      \n      {/* Left Rail - Mini Dialer + Quick Actions */}\n      <div className=\"lg:col-span-1 space-y-4\">\n        <div className=\"voicrm-card p-4\">\n          <h3 className=\"text-sm font-semibold text-oakmont-sage mb-3\">Quick Dialer</h3>\n          \n          <input\n            type=\"tel\"\n            value={dialerNumber}\n            onChange={(e) => setDialerNumber(e.target.value)}\n            placeholder=\"Enter number...\"\n            className=\"w-full p-2 border border-oakmont-sage/20 rounded-lg phone-input text-center mb-3\"\n          />\n          \n          <div className=\"grid grid-cols-3 gap-1 mb-3\">\n            {dialpadDigits.map(digit => (\n              <button\n                key={digit}\n                onClick={() => setDialerNumber(prev => prev + digit)}\n                className=\"p-2 bg-oakmont-cream hover:bg-oakmont-sage/10 rounded text-center font-mono\"\n              >\n                {digit}\n              </button>\n            ))}\n          </div>\n          \n          <button\n            onClick={() => {\n              if (dialerNumber) {\n                // Make call logic here\n                console.log('Calling:', dialerNumber)\n              }\n            }}\n            disabled={!dialerNumber || activeCall}\n            className=\"w-full voicrm-btn-primary flex items-center justify-center space-x-2\"\n          >\n            <Phone className=\"h-4 w-4\" />\n            <span>Call</span>\n          </button>\n        </div>\n        \n        {/* Number Carousel */}\n        <NumberCarousel />\n        \n        {/* Quick Disposition */}\n        <div className=\"voicrm-card p-4\">\n          <h3 className=\"text-sm font-semibold text-oakmont-sage mb-3\">Call Outcome</h3>\n          <div className=\"space-y-2\">\n            {['Interested', 'Not Interested', 'Callback', 'Voicemail', 'Wrong Number'].map(outcome => (\n              <button\n                key={outcome}\n                onClick={() => setCallDisposition(outcome)}\n                className={`w-full p-2 rounded text-sm ${\n                  callDisposition === outcome\n                    ? 'bg-oakmont-sage text-white'\n                    : 'bg-oakmont-cream hover:bg-oakmont-sage/10 text-oakmont-black'\n                }`}\n              >\n                {outcome}\n              </button>\n            ))}\n          </div>\n        </div>\n      </div>\n      \n      {/* Main Stacked Interface */}\n      <div className=\"lg:col-span-3 space-y-6\">\n        \n        {/* Team Collision Warning */}\n        {teamCollisionWarning && (\n          <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-4 flex items-center space-x-3\">\n            <AlertTriangle className=\"h-5 w-5 text-yellow-600\" />\n            <div>\n              <p className=\"text-yellow-800 font-medium\">Team Collision Detected</p>\n              <p className=\"text-yellow-700 text-sm\">\n                {teamCollisionWarning.agent_name} contacted this lead {teamCollisionWarning.hours_ago} hours ago\n              </p>\n            </div>\n          </div>\n        )}\n        \n        {/* Pane 1: Call Control */}\n        <div className=\"voicrm-card p-6\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h2 className=\"text-xl font-bold text-oakmont-sage\">Call Control</h2>\n            {callQuality && (\n              <div className=\"text-sm text-oakmont-grey\">\n                Quality: <span className={`font-bold ${callQuality.mos >= 4.0 ? 'text-green-600' : 'text-yellow-600'}`}>\n                  {callQuality.mos.toFixed(1)} MOS\n                </span>\n              </div>\n            )}\n          </div>\n          \n          <WebRTCInterface \n            onCallStateChange={handleCallStateChange}\n            onQualityUpdate={handleQualityUpdate}\n          />\n        </div>\n        \n        {/* Pane 2: Contact Information */}\n        <div className=\"voicrm-card p-6\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h2 className=\"text-xl font-bold text-oakmont-sage flex items-center space-x-2\">\n              <User className=\"h-5 w-5\" />\n              <span>Contact</span>\n            </h2>\n            {selectedContact && (\n              <span className={`px-3 py-1 rounded-full text-sm font-medium ${\n                selectedContact.lead_score >= 8 ? 'bg-green-100 text-green-800' :\n                selectedContact.lead_score >= 5 ? 'bg-yellow-100 text-yellow-800' :\n                'bg-gray-100 text-gray-800'\n              }`}>\n                Score: {selectedContact.lead_score || 'N/A'}\n              </span>\n            )}\n          </div>\n          \n          {selectedContact ? (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <h3 className=\"font-semibold text-oakmont-black text-lg\">\n                  {selectedContact.first_name} {selectedContact.last_name}\n                </h3>\n                <p className=\"text-oakmont-grey mb-2\">{selectedContact.company}</p>\n                \n                <div className=\"space-y-2 text-sm\">\n                  <div className=\"flex items-center space-x-2\">\n                    <Phone className=\"h-4 w-4 text-oakmont-tan\" />\n                    <span>{formatAustralianNumber(selectedContact.phone_primary)}</span>\n                  </div>\n                  {selectedContact.phone_mobile && (\n                    <div className=\"flex items-center space-x-2\">\n                      <Phone className=\"h-4 w-4 text-oakmont-tan\" />\n                      <span>{formatAustralianNumber(selectedContact.phone_mobile)} (Mobile)</span>\n                    </div>\n                  )}\n                  <div className=\"flex items-center space-x-2\">\n                    <Clock className=\"h-4 w-4 text-oakmont-brown\" />\n                    <span>Last contact: {selectedContact.last_contacted}</span>\n                  </div>\n                </div>\n              </div>\n              \n              <div>\n                <h4 className=\"font-medium text-oakmont-sage mb-2\">Contact Notes</h4>\n                <div className=\"bg-oakmont-cream p-3 rounded-lg text-sm\">\n                  {selectedContact.notes || 'No notes available'}\n                </div>\n                \n                <h4 className=\"font-medium text-oakmont-sage mb-2 mt-4\">Interaction History</h4>\n                <div className=\"text-sm text-oakmont-grey\">\n                  <p>• Phone call - 3 days ago</p>\n                  <p>• Email sent - 1 week ago</p>\n                  <p>• Property inquiry - 2 weeks ago</p>\n                </div>\n              </div>\n            </div>\n          ) : (\n            <div className=\"text-center py-12\">\n              <User className=\"h-12 w-12 text-oakmont-grey/50 mx-auto mb-4\" />\n              <p className=\"text-oakmont-grey\">Select a contact to view details</p>\n              \n              {/* Recent Contacts List */}\n              <div className=\"mt-6 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                {contacts.slice(0, 6).map(contact => (\n                  <button\n                    key={contact.id}\n                    onClick={() => handleContactSelect(contact)}\n                    className=\"text-left p-4 bg-oakmont-cream hover:bg-oakmont-sage/10 rounded-lg border border-oakmont-sage/20 transition-colors\"\n                  >\n                    <div className=\"font-medium text-oakmont-black\">\n                      {contact.first_name} {contact.last_name}\n                    </div>\n                    <div className=\"text-sm text-oakmont-grey\">\n                      {formatAustralianNumber(contact.phone_primary)}\n                    </div>\n                    <div className=\"text-xs text-oakmont-tan mt-1\">\n                      {contact.company}\n                    </div>\n                  </button>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n        \n        {/* Pane 3: Property Information */}\n        <div className=\"voicrm-card p-6\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h2 className=\"text-xl font-bold text-oakmont-sage flex items-center space-x-2\">\n              <Home className=\"h-5 w-5\" />\n              <span>Property</span>\n            </h2>\n          </div>\n          \n          {selectedProperty ? (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <h3 className=\"font-semibold text-oakmont-black text-lg\">{selectedProperty.address}</h3>\n                <p className=\"text-oakmont-grey mb-2\">\n                  {selectedProperty.suburb}, {selectedProperty.state} {selectedProperty.postcode}\n                </p>\n                \n                <div className=\"space-y-2 text-sm\">\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"text-oakmont-grey\">Price:</span>\n                    <span className=\"font-semibold text-oakmont-tan\">\n                      ${selectedProperty.price?.toLocaleString()}\n                    </span>\n                  </div>\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"text-oakmont-grey\">Bedrooms:</span>\n                    <span>{selectedProperty.bedrooms}</span>\n                  </div>\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"text-oakmont-grey\">Bathrooms:</span>\n                    <span>{selectedProperty.bathrooms}</span>\n                  </div>\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"text-oakmont-grey\">Property Type:</span>\n                    <span className=\"capitalize\">{selectedProperty.property_type}</span>\n                  </div>\n                </div>\n              </div>\n              \n              <div>\n                <h4 className=\"font-medium text-oakmont-sage mb-2\">Property Details</h4>\n                <div className=\"bg-oakmont-cream p-3 rounded-lg text-sm mb-4\">\n                  {selectedProperty.description || 'No description available'}\n                </div>\n                \n                <div className=\"space-y-2 text-sm\">\n                  <div className=\"flex items-center space-x-2\">\n                    <MapPin className=\"h-4 w-4 text-oakmont-brown\" />\n                    <span>Inspection: {selectedProperty.next_inspection || 'TBA'}</span>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <Clock className=\"h-4 w-4 text-oakmont-tan\" />\n                    <span>Listed: {selectedProperty.date_listed}</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          ) : (\n            <div className=\"text-center py-12\">\n              <Home className=\"h-12 w-12 text-oakmont-grey/50 mx-auto mb-4\" />\n              <p className=\"text-oakmont-grey\">Property details will appear here</p>\n              \n              {/* Recent Properties */}\n              <div className=\"mt-6 grid grid-cols-1 md:grid-cols-2 gap-4\">\n                {properties.slice(0, 4).map(property => (\n                  <button\n                    key={property.id}\n                    onClick={() => setSelectedProperty(property)}\n                    className=\"text-left p-4 bg-oakmont-cream hover:bg-oakmont-sage/10 rounded-lg border border-oakmont-sage/20 transition-colors\"\n                  >\n                    <div className=\"font-medium text-oakmont-black text-sm\">\n                      {property.address}\n                    </div>\n                    <div className=\"text-xs text-oakmont-grey\">\n                      {property.suburb}, {property.state}\n                    </div>\n                    <div className=\"text-sm text-oakmont-tan font-semibold mt-1\">\n                      ${property.price?.toLocaleString()}\n                    </div>\n                  </button>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n        \n        {/* Pane 4: Live Transcript & AI Analysis */}\n        <div className=\"voicrm-card p-6\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h2 className=\"text-xl font-bold text-oakmont-sage flex items-center space-x-2\">\n              <FileText className=\"h-5 w-5\" />\n              <span>Live Transcript</span>\n            </h2>\n            {activeCall && (\n              <div className=\"flex items-center space-x-2 text-sm\">\n                <div className=\"w-2 h-2 bg-red-500 rounded-full animate-pulse\"></div>\n                <span className=\"text-oakmont-grey\">Recording</span>\n              </div>\n            )}\n          </div>\n          \n          <div className=\"transcript-container\">\n            {transcript.length > 0 ? (\n              transcript.map((entry, index) => (\n                <div key={index} className=\"transcript-entry\">\n                  <div className=\"transcript-speaker\">{entry.speaker}</div>\n                  <div className=\"transcript-text\">{entry.text}</div>\n                  <div className=\"transcript-timestamp\">{entry.timestamp}</div>\n                </div>\n              ))\n            ) : (\n              <div className=\"text-center py-8\">\n                <FileText className=\"h-8 w-8 text-oakmont-grey/50 mx-auto mb-2\" />\n                <p className=\"text-oakmont-grey text-sm\">\n                  {activeCall ? 'Listening for speech...' : 'Start a call to see live transcription'}\n                </p>\n              </div>\n            )}\n          </div>\n          \n          {/* AI Insights Panel */}\n          {activeCall && (\n            <div className=\"mt-4 p-4 bg-oakmont-sage/5 rounded-lg border border-oakmont-sage/20\">\n              <h4 className=\"font-medium text-oakmont-sage mb-2\">AI Insights</h4>\n              <div className=\"text-sm text-oakmont-grey space-y-1\">\n                <p>• Sentiment: Positive</p>\n                <p>• Intent: Information seeking</p>\n                <p>• Next action: Send property details</p>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n      \n      {/* Right Drawer - Compliance & Settings */}\n      <div className=\"fixed right-4 top-20 w-64 space-y-4 hidden xl:block\">\n        <div className=\"voicrm-card p-4\">\n          <h3 className=\"text-sm font-semibold text-oakmont-sage mb-3\">Compliance</h3>\n          <div className=\"space-y-2 text-sm\">\n            <div className=\"flex items-center justify-between\">\n              <span className=\"text-oakmont-grey\">Recording Consent:</span>\n              <span className=\"text-green-600 font-medium\">✓ Obtained</span>\n            </div>\n            <div className=\"flex items-center justify-between\">\n              <span className=\"text-oakmont-grey\">DNC Status:</span>\n              <span className=\"text-green-600 font-medium\">✓ Clear</span>\n            </div>\n            <div className=\"flex items-center justify-between\">\n              <span className=\"text-oakmont-grey\">Privacy Act:</span>\n              <span className=\"text-green-600 font-medium\">✓ Compliant</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}"